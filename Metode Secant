# Menyelesaikan Persamaan Non Linear x^3 + x^2 - 3x - 3 dengan Metode Secant

# Mengimport library yang digunakan
import matplotlib.pyplot as plt
import numpy as np

# Mendefinisikan fungsi
def f(x):
    return x**3 + x**2 - 3*x - 3

# Metode Secant
def secant(x0, x1, tol=1e-6, max_iter=100):
    print("Iterasi\t     x0\t\t     x1\t\t     x2\t\t   f(x2)")
    nilai_x = []

    for i in range(max_iter):
        f0 = f(x0)
        f1 = f(x1)

        if f1 - f0 == 0:
            print("Error: karena pembagian dengan nol")
            break

        x2 = x1 - f1 * (x1 - x0) / (f1 - f0)
        f2 = f(x2)

        print(f"{i+1}\t{x0:.6f}\t{x1:.6f}\t{x2:.6f}\t{f2:.6f}")
        nilai_x.append(x2)

        if abs(f2) < tol:
            print(f"\nAkar ditemukan pada x = {x2:.12f}")
            return x2, nilai_x

        x0, x1 = x1, x2

    print("\nMetode tidak konvergen.")
    return None, nilai_x

# Menjalankan metode dengan tebakan awal
akar, nilai_x = secant(2, 3)

# Visualisasi hasil
x_vals = np.linspace(1.5, 3.5, 400)
y_vals = f(x_vals)

plt.figure(figsize=(10, 6))
plt.plot(x_vals, y_vals, label="f(x)", color="blue")
plt.axhline(0, color='gray', linestyle='--', linewidth=1)
plt.plot(nilai_x, [f(x) for x in nilai_x], 'ro', label='Titik Iterasi')
plt.title("Visualisasi Metode Secant")
plt.xlabel("x")
plt.ylabel("f(x)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# Ringkasan akhir
if akar is not None:
    print("\n=== Ringkasan Akhir ===")
    print(f"Akar ditemukan pada x = {akar:.12f}")
    print(f"f(x) = {f(akar):.12e}")
    print(f"Jumlah iterasi = {len(nilai_x)}")
